{"version":3,"sources":["redux/actions.js","components/generic/ButtonGroup.js","routes/routes.js","redux/selectors.js","components/generic/Button.js","components/ProductTable/ControlPanel.js","components/ProductTable/ProductTable.js","util/convertCurrency.js","components/ProductEditForm/ProductEditForm.js","components/layouts/ProductEditFormLayout.js","components/ProductEditForm/UpdateProduct.js","components/ProductEditForm/CreateProduct.js","components/Router.js","components/layouts/Header.js","components/ErrorPanel/ErrorPanel.js","components/App.js","serviceWorker.js","redux/reducers.js","services/ProductService.js","services/CurrencyConversionService.js","redux/sagas.js","theme/theme.js","index.js","store/store.js"],"names":["FETCH_ALL_PRODUCTS_REQUEST","FETCH_ALL_PRODUCTS_SUCCESS","FETCH_ALL_PRODUCTS_FAILURE","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAILURE","requestUpdateProduct","productData","type","payload","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILURE","CLEAR_ERRORS_REQUEST","CLEAR_ERRORS_SUCCESS","CLEAR_ERRORS_FAILURE","FETCH_CURRENCY_RATE_REQUEST","FETCH_CURRENCY_RATE_SUCCESS","FETCH_CURRENCY_RATE_FAILURE","useStyles","makeStyles","root","display","flexFlow","alignItems","ButtonGroup","_ref","children","classes","react_default","a","createElement","className","UPDATE_PRODUCT","CREATE_PRODUCT","PRODUCT_TABLE","HOME","isUpdateLoading","state","loadingFlags","productUpdate","selectAllProducts","Object","values","products","selectProductByProductId","id","selectErrors","errors","selectCurrencyRate","currencyRate","rate","marginBottom","rest","objectWithoutProperties","core_index_es","assign","variant","justifyContent","ControlPanel","useAud","updateUseAud","disabled","checked","onChange","value","color","Button_ButtonGroup","component","Link","to","currencyColumn","textAlign","connect","ownProps","dispatch","deleteProduct","product","requestDeleteProduct","_useState","useState","_useState2","slicedToArray","map","i","key","name","Number","toFixed","formatCurrency","priceUsd","concat","Routes","onClick","maxWidth","field","paddingBottom","updateLoading","submitForm","updateName","_useState3","_useState4","updatePriceUsd","_useState5","_useState6","formSubmitted","updateFormSubmitted","react_router","onSubmit","event","preventDefault","label","target","padding","ProductEditFormLayout","match","params","gutterBottom","ProductEditForm_ProductEditForm","emptyData","CreateProduct","objectDestructuringEmpty","react_router_dom","path","exact","UpdateProduct","ProductTable","align","theme","margin","palette","secondary","main","fontWeight","border","borderRadius","button","clearErrors","size","Close_default","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchAllProducts","fetchCurrencyRate","CssBaseline_default","Header_ProductEditFormLayout","ErrorPanel_ErrorPanel","components_Router","Component","Boolean","window","location","hostname","initialState","initialLoadingState","updateProduct","initialErrorState","initialCurrencyRateState","rootReducer","combineReducers","arguments","length","undefined","action","reduce","acc","cur","objectSpread","defineProperty","newState","split","pop","URI_PRODUCTS","defaultOptions","makeApiCall","asyncToGenerator","regenerator_default","mark","_callee","uri","method","options","response","_args","wrap","_context","prev","next","axios","url","sent","abrupt","data","t0","stop","_x","apply","_fetchAllProducts","_callee2","_context2","postProduct","_x2","_postProduct","_callee3","_context3","patchProduct","_x3","_patchProduct","_callee4","_context4","_x4","_deleteProduct","_callee5","_context5","BASE_URL","fetchLatestRate","_fetchLatestRate","from","fetchUsdToAudRate","_fetchUsdToAudRate","ratesData","rates","AUD","fetchAllProductsSaga","updateProductSaga","deleteProductSaga","clearErrorsSaga","fetchCurrencyRateSaga","rootSaga","takeLeading","result","console","log","put","error","_marked","_marked2","_context6","_marked3","_context8","_context7","_marked4","_context10","_context9","_marked5","_context11","all","_marked6","createMuiTheme","typography","h1","fontSize","h2","store","preloadedState","sagaMiddleware","createSagaMiddleware","middlewares","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","run","rootSagas","configureStore","ReactDOM","render","es","index_es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAEaA,EACT,6BACSC,EACT,6BACSC,EACT,6BAWG,IAEMC,EACT,yBACSC,EACT,yBACSC,EACT,yBAIG,SAASC,EAAqBC,GACjC,MAAO,CACHC,KAAML,EACNM,QAASF,GAIV,IAEMG,EACT,yBACSC,EACT,yBACSC,EACT,sBAUG,IAEMC,EACT,uBACSC,EACT,uBACSC,EACT,uBAYG,IAEMC,EACT,8BACSC,EACT,8BACSC,EACT,0EC5EEC,EAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,SAAU,gBACVC,WAAY,aAIL,SAASC,EAATC,GAAmC,IAAZC,EAAYD,EAAZC,SAC5BC,EAAUT,IAChB,OAAOU,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MAC1BM,GCdF,IAAMM,EAAiB,YACjBC,EAAiB,gBACjBC,EAAgB,YAChBC,EAAO,ICKb,SAASC,EAAgBC,GAC5B,OAAOA,EAAMC,aAAaC,cAGvB,SAASC,EAAkBH,GAC9B,OAAOI,OAAOC,OAAOL,EAAMM,UAGxB,SAASC,EAAyBP,EAAOQ,GAC5C,OAAOR,EAAMM,SAASE,GAGnB,SAASC,EAAaT,GACzB,OAAOA,EAAMU,OAAOA,OAGjB,SAASC,EAAmBX,GAC/B,OAAOA,EAAMY,aAAaC,kBCrBxBhC,EAAYC,YAAW,CACzBC,KAAM,CACF+B,aAAc,WAIP,SAAS3B,EAATC,GAA4C,IAArBC,EAAqBD,EAArBC,SAAa0B,EAAQX,OAAAY,EAAA,EAAAZ,CAAAhB,EAAA,cACjDE,EAAUT,IAChB,OAAOU,EAAAC,EAAAC,cAACwB,EAAA,EAADb,OAAAc,OAAA,CAAQxB,UAAWJ,EAAQP,KAAMoC,QAAQ,aAAgBJ,GAC3D1B,GCPT,IAAMR,EAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,SAAU,aACVmC,eAAgB,cAIT,SAASC,EAATjC,GAA0D,IAAlCkC,EAAkClC,EAAlCkC,OAAQC,EAA0BnC,EAA1BmC,aAAcC,EAAYpC,EAAZoC,SACnDlC,EAAUT,IAChB,OAAOU,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MAG3BQ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIQ,QAASH,EACTI,SAAU,kBAAMH,GAAcD,IAC9BK,MAAM,SACNC,MAAM,UACNJ,SAAUA,IAEdjC,EAAAC,EAAAC,cAACoC,EAAD,CACID,MAAM,UACNE,UAAWC,IACXC,GAAIpC,GAHR,gBCdR,IAAMf,EAAYC,YAAW,CACzBC,KAAM,GAINkD,eAAgB,CACZC,UAAW,WA8DnB,IAeeC,cAfS,SACpBnC,EACAoC,GAEA,MAAO,CACH9B,SAAUH,EAAkBH,GAC5BY,aAAcD,EAAmBX,KAId,SAAAqC,GACvB,MAAO,CACHC,cAAe,SAACC,GAAD,OAAaF,EN9C7B,SAA8BE,GACjC,MAAO,CACHrE,KAAME,EACND,QAASoE,GM2C4BC,CAAqBD,OAGnDJ,CAzEf,SAAA/C,GAAiE,IAAzCkB,EAAyClB,EAAzCkB,SAAUgC,EAA+BlD,EAA/BkD,cAAe1B,EAAgBxB,EAAhBwB,aACvCtB,EAAUT,IAD6C4D,EAG9BC,oBAAS,GAHqBC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GAGtDnB,EAHsDqB,EAAA,GAG9CpB,EAH8CoB,EAAA,GAK7D,OACIpD,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAC4B,EAAD,CACIC,OAAQA,EACRC,aAAcA,EACdC,UAAWZ,IAEfrB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOvB,UAAWJ,EAAQP,MACtBQ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,mBACA1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,qBACA1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KAAYK,EAAM,6BAClB/B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,iBAGR1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACKX,GAAYA,EAASuC,IAAI,SAACN,EAASO,GAChC,OAAQvD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACJ8B,IAAKR,EAAQ/B,IAEbjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KAAYsB,EAAQ/B,IACpBjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KAAYsB,EAAQS,MACpBzD,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAWvB,UAAWJ,EAAQ2C,gBC9CnD,SAAwBN,GAC3B,OAAOsB,OAAOtB,GAAOuB,QAAQ,GD6C0CC,CAC3C7B,EAAyBiB,EAAQa,SAAUxC,EACrC2B,EAAQa,WAElB7D,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAACoC,EAAD,CACIC,UAAWC,IACXC,GAAE,GAAAqB,OAAKC,EAAL,KAAAD,OAA8Bd,EAAQ/B,IACxCoB,MAAM,WAHV,UAKArC,EAAAC,EAAAC,cAACoC,EAAD,CACI0B,QAAS,kBAAMjB,EAAcC,IAC7BX,MAAM,aAFV,oBEpD9B/C,GAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,SAAU,gBACVC,WAAY,UAEZsE,SAAU,KAGdC,MAAO,CAEHC,cAAe,SAqEvB,IAcevB,eAdS,SACpBnC,EACAoC,GAEA,MAAO,CACHuB,cAAe5D,EAAgBC,KAIZ,SAAAqC,GACvB,MAAO,CACHuB,WAAY,SAAC3F,GAAD,OAAiBoE,EAASrE,EAAqBC,OAGpDkE,CA1Ef,SAAA/C,GAAqE,IAA1CnB,EAA0CmB,EAA1CnB,YAAa2F,EAA6BxE,EAA7BwE,WAAYD,EAAiBvE,EAAjBuE,cAC1CrE,EAAUT,KADiD4D,EAEtCC,mBAASzE,EAAY+E,MAFiBL,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAqC,EAAA,GAE1DO,EAF0DL,EAAA,GAEpDkB,EAFoDlB,EAAA,GAAAmB,EAG9BpB,mBAASzE,EAAYmF,UAHSW,EAAA3D,OAAAwC,EAAA,EAAAxC,CAAA0D,EAAA,GAG1DV,EAH0DW,EAAA,GAGhDC,EAHgDD,EAAA,GAAAE,EAKpBvB,oBAAS,GALWwB,EAAA9D,OAAAwC,EAAA,EAAAxC,CAAA6D,EAAA,GAK1DE,EAL0DD,EAAA,GAK3CE,EAL2CF,EAAA,GAOjE,OACKC,IAAkBR,EAAiBpE,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUrC,GAAInC,IAAoBN,EAAAC,EAAAC,cAAA,QAClEC,UAAWJ,EAAQP,KACnBuF,SAAU,SAACC,GACPA,EAAMC,iBACNZ,EAAW,CACPpD,GAAIvC,EAAYuC,GAChBwC,OACAI,aAGJgB,GAAoB,KAGxB7E,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIO,UAAQ,EACRiD,MAAM,aACN9C,MAAO1D,EAAYuC,IAAM,MACzBd,UAAWJ,EAAQmE,QAEvBlE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIU,MAAOqB,EACPyB,MAAM,eACN/C,SAAU,SAAC6C,GAAD,OAAWV,EAAWU,EAAMG,OAAO/C,QAC7CH,SAAUmC,EACVjE,UAAWJ,EAAQmE,QAIvBlE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIU,MAAOyB,EACPqB,MAAM,cACN/C,SAAU,SAAC6C,GAAD,OAAWP,EAAeO,EAAMG,OAAO/C,QACjDH,SAAUmC,EACVzF,KAAK,SACLwB,UAAWJ,EAAQmE,QAIvBlE,EAAAC,EAAAC,cAACoC,EAAD,CACI3D,KAAK,SACLsD,SAAUmC,EACVjE,UAAWJ,EAAQmE,MACnB7B,MAAM,WAJV,aCzEN/C,GAAYC,YAAW,CACzBC,KAAM,CACF4F,QAAS,SAIF,SAASC,GAATxF,GAA6C,IAAZC,EAAYD,EAAZC,SACtCC,EAAUT,KAChB,OAAOU,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MAE1BM,GCHT,IAAMR,GAAYC,YAAW,CACzBC,KAAM,KAaV,IAceoD,eAdS,SACpBnC,EACAoC,GAEA,MAAO,CACHnE,YAAasC,EAAyBP,EAAOoC,EAASyC,MAAMC,OAAOtE,MAIhD,SAAA6B,GACvB,MAAO,CACHuB,WAAY,SAAC3F,GAAD,OAAiBoE,EAASrE,EAAqBC,OAGpDkE,CAtBf,SAAA/C,GAAwC,IAAfnB,EAAemB,EAAfnB,YAErB,OADgBY,KACTU,EAAAC,EAAAC,cAACmF,GAAD,KACHrF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYE,QAAQ,KAAK4D,cAAY,GAArC,mBACC9G,GAAesB,EAAAC,EAAAC,cAACuF,GAAD,CAAiB/G,YAAaA,iBCZhDY,GAAYC,YAAW,CACzBC,KAAM,CACFC,QAAS,OACTC,SAAU,gBACVC,WAAY,aAId+F,GRdK,CACHzE,GAAI,GACJwC,KAAM,GACNI,SAAU,IQaH,SAAS8B,GAAT9F,GAA6BgB,OAAA+E,GAAA,EAAA/E,CAAAhB,GACxBP,KAChB,OAAOU,EAAAC,EAAAC,cAACmF,GAAD,KACHrF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYE,QAAQ,KAAK4D,cAAY,GAArC,mBACAxF,EAAAC,EAAAC,cAACuF,GAAD,CAAiB/G,YAAagH,MCAtC,IAYe9C,eAZS,SACpBnC,EACAoC,GAEA,MAAO,IAGgB,SAAAC,GACvB,MAAO,IAIIF,CAxBf,WACI,OAAQ5C,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,KACJ7F,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KAEI9E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAOgB,KAAM/B,EAAuBgC,OAAK,EAACxD,UAAWoD,KACrD3F,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAOgB,KAAI,GAAAhC,OAAKC,EAAL,QAAkCgC,OAAK,EAACxD,UAAWyD,KAC9DhG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAOgB,KAAM/B,EAAsBgC,OAAK,EAACxD,UAAW0D,IACpDjG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAOgB,KAAM/B,EAAagC,OAAK,EAACxD,UAAW0D,QCbjD3G,GAAYC,YAAW,CACzBC,KAAM,KAKK,SAAS6F,GAATxF,GAA6CA,EAAZC,SAAY,IAClDC,EAAUT,KAChB,OAAOU,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,EAAQP,MAC9BQ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIE,QAAQ,KACRsE,MAAM,SACNV,cAAY,GAHhB,yDCJFlG,GAAYC,YAAW,SAAC4G,GAC1B,MAAO,CACH3G,KAAM,CACF4F,QAAS,MACTgB,OAAQ,UACR/D,MAAK,GAAAyB,OAAKqC,EAAME,QAAQC,UAAUC,MAClCC,WAAY,OACZC,OAAM,aAAA3C,OAAeqC,EAAME,QAAQC,UAAUC,MAC7CG,aAAc,GAGlBC,OAAQ,CACJlH,QAAS,QACT2G,OAAQ,iBAyBpB,IAcexD,eAdS,SACpBnC,EACAoC,GAEA,MAAO,CACH1B,OAAQD,EAAaT,KAIF,SAAAqC,GACvB,MAAO,CACH8D,YAAa,kBAAM9D,EdQhB,CACHnE,KAAMK,EACNJ,QAAS,UcPFgE,CAhCf,SAAA/C,GAA6C,IAAvBsB,EAAuBtB,EAAvBsB,OAAQyF,EAAe/G,EAAf+G,YACpB7G,EAAUT,KAEhB,OAAQ6B,GAAUnB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQP,MACtCQ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYE,QAAQ,KAApB,qCACA5B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIW,MAAM,YACNwE,KAAK,QACL1G,UAAWJ,EAAQ4G,OACnB3C,QAAS4C,GAET5G,EAAAC,EAAAC,cAAC4G,GAAA7G,EAAD,UC/BN8G,eAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAApG,OAAAqG,EAAA,EAAArG,CAAAsG,KAAAJ,GACjBE,EAAApG,OAAAuG,EAAA,EAAAvG,CAAAsG,KAAAtG,OAAAwG,EAAA,EAAAxG,CAAAkG,GAAAO,KAAAH,KAAMH,IAENA,EAAMO,mBACNP,EAAMQ,oBAJWP,wEAQjB,OACEjH,EAAAC,EAAAC,cAACuH,EAAAxH,EAAD,KACED,EAAAC,EAAAC,cAACwH,GAAD,MACA1H,EAAAC,EAAAC,cAACyH,GAAD,MACA3H,EAAAC,EAAAC,cAAC0H,GAAD,cAdUC,aAoCHjF,eAbS,SACtBnC,EACAoC,GAEA,MAAO,IAGkB,SAAAC,GACzB,MAAO,CACLyE,iBAAkB,kBAAMzE,Ef5BjB,CACHnE,KAAMR,EACNS,QAAS,Qe2Bb4I,kBAAmB,kBAAM1E,Ef2ClB,CACHnE,KAAMQ,OezCCyD,CAGbmE,ICnCkBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3C,MACvB,oGCdA4C,GAAe,GA4BrB,IAAMC,GAAsB,CACxBC,eAAe,GAmBnB,IAAMC,GAAoB,CACtBlH,OAAQ,MAmBZ,IAAMmH,GAA2B,CAC7BhH,KAAM,MAcV,IAQeiH,GARKC,2BAAgB,CAChCzH,SAnFG,WAAuD,IAA9BN,EAA8BgI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBP,GAAcU,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClDhK,EAAkBiK,EAAlBjK,KAAMC,EAAYgK,EAAZhK,QAEd,OAAQD,GACJ,KAAKP,EAED,OAAOQ,EAAQiK,OAAO,SAACC,EAAKC,GACxB,OAAOlI,OAAAmI,GAAA,EAAAnI,CAAA,GAAKiI,EAAZjI,OAAAoI,GAAA,EAAApI,CAAA,GAAkBkI,EAAI9H,GAAK8H,KAC5B,IAGP,KAAKxK,EAED,OAAOsC,OAAAmI,GAAA,EAAAnI,CAAA,GAAKJ,EAAZI,OAAAoI,GAAA,EAAApI,CAAA,GAAoBjC,EAAQqC,GAAKrC,IAGrC,KAAKE,EACD,IAAMoK,EAAQrI,OAAAmI,GAAA,EAAAnI,CAAA,GAAQJ,GAEtB,cADOyI,EAAStK,EAAQqC,IACjBiI,EAIX,QAAS,OAAOzI,IA6DpBC,aAhDG,WAAkE,IAArCD,EAAqCgI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BN,GAAqBS,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7DhK,EAAkBiK,EAAlBjK,KACR,OAD0BiK,EAAZhK,QACND,GACJ,KAAKL,EAAwB,OAAOuC,OAAAmI,GAAA,EAAAnI,CAAA,GAAKJ,EAAZ,CAAmB2H,eAAe,IAC/D,KAAK7J,EACL,KAAKC,EAAwB,OAAOqC,OAAAmI,GAAA,EAAAnI,CAAA,GAAKJ,EAAZ,CAAmB2H,eAAe,IAC/D,QAAS,OAAO3H,IA2CpBU,OAlCG,WAA0D,IAAnCV,EAAmCgI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BJ,GAAmBO,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrDhK,EAAkBiK,EAAlBjK,KAAMC,EAAYgK,EAAZhK,QAEd,MAA8B,YAA1BD,EAAKwK,MAAM,KAAKC,MACT,CACHjI,OAAQvC,GAIZD,IAASM,EACFoJ,GAGJ5H,GAsBPY,aAfG,WAAuE,IAA1CZ,EAA0CgI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlCH,GAA0BM,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClEhK,EAAkBiK,EAAlBjK,KAAMC,EAAYgK,EAAZhK,QACd,OAAQD,GACJ,KAAKS,EAA6B,MAAO,CACrCkC,KAAM1C,GAGV,QAAS,OAAO6B,yEChFlB4I,GAAe,YAEfC,GAAiB,GAIVC,GAAW,eAAA1J,EAAAgB,OAAA2I,GAAA,EAAA3I,CAAA4I,GAAAxJ,EAAAyJ,KAAG,SAAAC,EAAgBC,GAAhB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAvB,UAAA,OAAAgB,GAAAxJ,EAAAgK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAqBP,EAArBG,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAA8B,MAAOF,EAArCE,EAAAtB,OAAA,QAAAC,IAAAqB,EAAA,GAAAA,EAAA,GAA+CV,GAA/CY,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIC,KAAMxJ,OAAAmI,GAAA,EAAAnI,CAAA,GACtBiJ,EADqB,CAExBD,OAAQA,EACRS,IAZK,OAYWV,KALD,cAEbG,EAFaG,EAAAK,KAAAL,EAAAM,OAAA,SAOZT,EAASU,MAPG,aAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAQ,GAAA,yBAAAR,EAAAS,SAAAhB,EAAA,iBAAH,gBAAAiB,GAAA,OAAA/K,EAAAgL,MAAA1D,KAAAsB,YAAA,GAajB,SAAelB,KAAtB,OAAAuD,GAAAD,MAAA1D,KAAAsB,0DAAO,SAAAsC,IAAA,OAAAtB,GAAAxJ,EAAAgK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAR,OAAA,SACIjB,GAAYF,KADhB,wBAAA2B,EAAAL,SAAAI,6BAIA,SAAeE,GAAtBC,GAAA,OAAAC,GAAAN,MAAA1D,KAAAsB,0DAAO,SAAA2C,EAA2BpI,GAA3B,OAAAyG,GAAAxJ,EAAAgK,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAb,OAAA,SACIjB,GAAYF,GAAc,OAAQ,CACrCoB,KAAMzH,KAFP,wBAAAqI,EAAAV,SAAAS,6BAMA,SAAeE,GAAtBC,GAAA,OAAAC,GAAAX,MAAA1D,KAAAsB,0DAAO,SAAAgD,EAA4BzI,GAA5B,OAAAyG,GAAAxJ,EAAAgK,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAlB,OAAA,SACIjB,GAAW,GAAAzF,OAAIuF,GAAJ,KAAAvF,OAAoBd,EAAQ/B,IAAM,QAAS,CACzDwJ,KAAMzH,KAFP,wBAAA0I,EAAAf,SAAAc,6BAMA,SAAe1I,GAAtB4I,GAAA,OAAAC,GAAAf,MAAA1D,KAAAsB,0DAAO,SAAAoD,EAA6B7I,GAA7B,OAAAyG,GAAAxJ,EAAAgK,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAAtB,OAAA,SACIjB,GAAW,GAAAzF,OAAIuF,GAAJ,KAAAvF,OAAoBd,EAAQ/B,IAAM,WADjD,wBAAA6K,EAAAnB,SAAAkB,6BCrCP,IAAME,GAAW,yCAEV,SAAeC,GAAtBpB,EAAAM,GAAA,OAAAe,GAAApB,MAAA1D,KAAAsB,0DAAO,SAAAkB,EAA+BuC,EAAMzJ,GAArC,IAAAsH,EAAA,OAAAN,GAAAxJ,EAAAgK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIwBC,KAAO,CAC1BR,OAAQ,MACRS,IAAG,GAAAxG,OAAKiI,GAAL,aAAAjI,OAAyBrB,EAAzB,UAAAqB,OAAoCoI,KAN5C,cAIOnC,EAJPG,EAAAK,KAAAL,EAAAM,OAAA,SAQQT,EAASU,MARjB,cAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAM,OAAA,SAAAN,EAAAQ,IAAA,yBAAAR,EAAAS,SAAAhB,EAAA,wCAiBA,SAAewC,KAAtB,OAAAC,GAAAvB,MAAA1D,KAAAsB,0DAAO,SAAAsC,IAAA,IAAAsB,EAAA,OAAA5C,GAAAxJ,EAAAgK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACqB4B,GAAgB,MAAO,OAD5C,cACGK,EADHrB,EAAAT,KAAAS,EAAAR,OAAA,SAEI6B,EAAUC,MAAMC,KAFpB,wBAAAvB,EAAAL,SAAAI,8CCAUyB,iBAyBAC,iBA6BAC,iBAsBAC,iBAgBAC,iBAsBQC,IAlHlB,SAAUL,KAAV,OAAA/C,GAAAxJ,EAAAgK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACH,OADGY,EAAAZ,KAAA,EACG0C,aAAY3O,EAADsL,GAAAxJ,EAAAyJ,KAA6B,SAAAC,IAAA,IAAAoD,EAAA,OAAAtD,GAAAxJ,EAAAgK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEvB,OAFuBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjB9C,aAAKC,IAFY,OAItC,OAFMwF,EAFgC7C,EAAAK,KAGtCyC,QAAQC,IAAIF,GAH0B7C,EAAAE,KAAA,EAIhC8C,aAAI,CACNvO,KAAMP,EACNQ,QAASmO,IANyB,OAAA7C,EAAAE,KAAA,gBAYtC,OAZsCF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAWtC8C,QAAQG,MAARjD,EAAAQ,IAXsCR,EAAAE,KAAA,GAYhC8C,aAAI,CACNvO,KAAMN,EACNO,QAAOsL,EAAAQ,KAd2B,yBAAAR,EAAAS,SAAAhB,EAAA,iBAD3C,wBAAAqB,EAAAL,SAAAyC,IAyBA,SAAUX,KAAV,OAAAhD,GAAAxJ,EAAAgK,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACH,OADGsB,EAAAtB,KAAA,EACG0C,aAAYxO,EAADmL,GAAAxJ,EAAAyJ,KAAyB,SAAAqB,EAAWnC,GAAX,IAAAhK,EAAAmO,EAAA,OAAAtD,GAAAxJ,EAAAgK,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,UAAAiB,EAAAlB,KAAA,EAE1BvL,EAAYgK,EAAZhK,aANM+J,KADG3F,EAUApE,GATVqC,IAA0C,IAAtB+B,EAAQ/B,GAAGyH,OAIJ,CAAA2C,EAAAjB,KAAA,QAMrB,OANqBiB,EAAAjB,KAAA,EAMf9C,aAAK2D,GAAarM,GANH,OAM9BmO,EAN8B1B,EAAAd,KAAAc,EAAAjB,KAAA,gBASrB,OATqBiB,EAAAjB,KAAA,GASf9C,aAAKgE,GAAc1M,GATJ,QAS9BmO,EAT8B1B,EAAAd,KAAA,QAYlC,OAZkCc,EAAAjB,KAAA,GAY5B8C,aAAI,CACNvO,KAAMJ,EACNK,QAASmO,IAdqB,QAAA1B,EAAAjB,KAAA,iBAoBlC,OApBkCiB,EAAAlB,KAAA,GAAAkB,EAAAX,GAAAW,EAAA,SAmBlC2B,QAAQG,MAAR9B,EAAAX,IAnBkCW,EAAAjB,KAAA,GAoB5B8C,aAAI,CACNvO,KAAMH,EACNI,QAAOyM,EAAAX,KAtBuB,yBAAAW,EAAAV,OALvC,IAAsB3H,GAKiB+H,EAAA,kBADvC,wBAAAW,EAAAf,SAAA0C,IA6BA,SAAUX,KAAV,OAAAjD,GAAAxJ,EAAAgK,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,OACH,OADGkD,EAAAlD,KAAA,EACG0C,aAAYjO,EAAD4K,GAAAxJ,EAAAyJ,KAAyB,SAAA0B,EAAWxC,GAAX,IAAAhK,EAAAmO,EAAA,OAAAtD,GAAAxJ,EAAAgK,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAGnB,OAHmB0B,EAAA3B,KAAA,EAE1BvL,EAAYgK,EAAZhK,QAF0BkN,EAAA1B,KAAA,EAGb9C,aAAKvE,GAAenE,GAHP,OAKlC,OAFMmO,EAH4BjB,EAAAvB,KAAAuB,EAAA1B,KAAA,EAK5B8C,aAAI,CACNvO,KAAMG,EACNF,QAASmO,IAPqB,OAAAjB,EAAA1B,KAAA,gBAalC,OAbkC0B,EAAA3B,KAAA,EAAA2B,EAAApB,GAAAoB,EAAA,SAYlCkB,QAAQG,MAARrB,EAAApB,IAZkCoB,EAAA1B,KAAA,GAa5B8C,aAAI,CACNvO,KAAMI,EACNH,QAAOkN,EAAApB,KAfuB,yBAAAoB,EAAAnB,SAAAS,EAAA,iBADvC,wBAAAkC,EAAA3C,SAAA4C,IAsBA,SAAUZ,KAAV,OAAAlD,GAAAxJ,EAAAgK,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACH,OADGoD,EAAApD,KAAA,EACG0C,aAAY9N,EAADyK,GAAAxJ,EAAAyJ,KAAuB,SAAA+B,IAAA,OAAAhC,GAAAxJ,EAAAgK,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,OAEhC,OAFgCqD,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAE1B8C,aAAI,CACNvO,KAAMM,IAHsB,OAAAwO,EAAArD,KAAA,eAOhC,OAPgCqD,EAAAtD,KAAA,EAAAsD,EAAA/C,GAAA+C,EAAA,SAAAA,EAAArD,KAAA,EAO1B8C,aAAI,CACNvO,KAAMO,EACNN,QAAO6O,EAAA/C,KATqB,wBAAA+C,EAAA9C,SAAAc,EAAA,iBADrC,wBAAA+B,EAAA7C,SAAA+C,IAgBA,SAAUd,KAAV,OAAAnD,GAAAxJ,EAAAgK,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,OACH,OADGuD,EAAAvD,KAAA,EACG0C,aAAY3N,EAADsK,GAAAxJ,EAAAyJ,KAA8B,SAAAmC,IAAA,IAAAvK,EAAA,OAAAmI,GAAAxJ,EAAAgK,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,OAG1B,OAH0BwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAGpB9C,aAAK6E,IAHe,OAIvC,OADM7K,EAHiCsM,EAAArD,KAAAqD,EAAAxD,KAAA,EAIjC8C,aAAI,CACNvO,KAAMS,EACNR,QAAS0C,IAN0B,OAAAsM,EAAAxD,KAAA,gBAUvC,OAVuCwD,EAAAzD,KAAA,EAAAyD,EAAAlD,GAAAkD,EAAA,SAAAA,EAAAxD,KAAA,GAUjC8C,aAAI,CACNvO,KAAMU,EACNT,QAAOgP,EAAAlD,KAZ4B,yBAAAkD,EAAAjD,SAAAkB,EAAA,iBAD5C,wBAAA8B,EAAAhD,SAAAkD,IAsBQ,SAAUhB,KAAV,OAAApD,GAAAxJ,EAAAgK,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,OACX,OADW0D,EAAA1D,KAAA,EACL2D,aAAI,CACNvB,KACAC,KACAC,KACAC,KACAC,OANO,wBAAAkB,EAAAnD,SAAAqD,iBCpIF7H,GAAQ8H,0BAAe,CAGhCC,WAAY,CACRC,GAAI,CACAC,SAAU,QAEdC,GAAI,CACAD,SAAU,WCFhBE,GCDS,SAAwBC,GAEnC,IAAMC,EAAiBC,eACjBC,EAAc,CAACF,GAGfG,EAAY,CAFSC,mBAAe/D,WAAf,EAAmB6D,IAGxCG,EAAoBC,uBAAmBjE,WAAnB,EAAuB8D,GAE3CL,EAAQS,uBAAYxG,GAAagG,EAAgBM,GAIvD,OAFAL,EAAeQ,IAAIC,IAEZX,EDZGY,GAIdC,IAASC,OACLpP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAUf,MAAOA,IACbtO,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAenJ,MAAOA,IAClBnG,EAAAC,EAAAC,cAACqP,GAAD,QAGRC,SAASC,eAAe,SN+GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f9a59d3a.chunk.js","sourcesContent":["export const FETCH_ALL_PRODUCTS_BASE =\n    'FETCH_ALL_PRODUCTS_BASE';\nexport const FETCH_ALL_PRODUCTS_REQUEST =\n    'FETCH_ALL_PRODUCTS_REQUEST';\nexport const FETCH_ALL_PRODUCTS_SUCCESS =\n    'FETCH_ALL_PRODUCTS_SUCCESS';\nexport const FETCH_ALL_PRODUCTS_FAILURE =\n    'FETCH_ALL_PRODUCTS_FAILURE';\nexport const FETCH_ALL_PRODUCTS_CLEAR =\n    'FETCH_ALL_PRODUCTS_CLEAR';\n\nexport function requestFetchAllProducts() {\n    return {\n        type: FETCH_ALL_PRODUCTS_REQUEST,\n        payload: null\n    }\n}\n\nexport const UPDATE_PRODUCT_BASE =\n    'UPDATE_PRODUCT_BASE';\nexport const UPDATE_PRODUCT_REQUEST =\n    'UPDATE_PRODUCT_REQUEST';\nexport const UPDATE_PRODUCT_SUCCESS =\n    'UPDATE_PRODUCT_SUCCESS';\nexport const UPDATE_PRODUCT_FAILURE =\n    'UPDATE_PRODUCT_FAILURE';\nexport const UPDATE_PRODUCT_CLEAR =\n    'UPDATE_PRODUCT_CLEAR';\n\nexport function requestUpdateProduct(productData) {\n    return {\n        type: UPDATE_PRODUCT_REQUEST,\n        payload: productData,\n    }\n}\n\nexport const DELETE_PRODUCT_BASE =\n    'DELETE_PRODUCT_BASE';\nexport const DELETE_PRODUCT_REQUEST =\n    'DELETE_PRODUCT_REQUEST';\nexport const DELETE_PRODUCT_SUCCESS =\n    'DELETE_PRODUCT_SUCCESS';\nexport const DELETE_PRODUCT_FAILURE =\n    'QUIZE_FETCH_FAILURE';\nexport const DELETE_PRODUCT_CLEAR =\n    'DELETE_PRODUCT_CLEAR';\nexport function requestDeleteProduct(product) {\n    return {\n        type: DELETE_PRODUCT_REQUEST,\n        payload: product,\n    }\n}\n\nexport const CLEAR_ERRORS_BASE =\n    'CLEAR_ERRORS_BASE';\nexport const CLEAR_ERRORS_REQUEST =\n    'CLEAR_ERRORS_REQUEST';\nexport const CLEAR_ERRORS_SUCCESS =\n    'CLEAR_ERRORS_SUCCESS';\nexport const CLEAR_ERRORS_FAILURE =\n    'CLEAR_ERRORS_FAILURE';\nexport const CLEAR_ERRORS_CLEAR =\n    'CLEAR_ERRORS_CLEAR';\n\nexport function requestClearErrors() {\n    return {\n        type: CLEAR_ERRORS_REQUEST,\n        payload: null\n    }\n}\n\n\nexport const FETCH_CURRENCY_RATE_BASE =\n    'FETCH_CURRENCY_RATE_BASE';\nexport const FETCH_CURRENCY_RATE_REQUEST =\n    'FETCH_CURRENCY_RATE_REQUEST';\nexport const FETCH_CURRENCY_RATE_SUCCESS =\n    'FETCH_CURRENCY_RATE_SUCCESS';\nexport const FETCH_CURRENCY_RATE_FAILURE =\n    'FETCH_CURRENCY_RATE_FAILURE';\nexport const FETCH_CURRENCY_RATE_CLEAR =\n    'FETCH_CURRENCY_RATE_CLEAR';\n\nexport function requestFetchCurrencyRate() {\n    return {\n        type: FETCH_CURRENCY_RATE_REQUEST\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        alignItems: \"stretch\",\n    },\n});\n\nexport default function ButtonGroup({ children }) {\n    const classes = useStyles();\n    return <div className={classes.root}>\n        {children}\n    </div>;\n}","export const UPDATE_PRODUCT = \"/products\";\nexport const CREATE_PRODUCT = \"/products/new\";\nexport const PRODUCT_TABLE = \"/products\";\nexport const HOME = \"/\"; ","export function createEmptyProduct() {\n    return {\n        id: \"\",\n        name: \"\",\n        priceUsd: \"\",\n    }\n}\n\nexport function isUpdateLoading(state) {\n    return state.loadingFlags.productUpdate;\n}\n\nexport function selectAllProducts(state) {\n    return Object.values(state.products)\n}\n\nexport function selectProductByProductId(state, id) {\n    return state.products[id];\n}\n\nexport function selectErrors(state) {\n    return state.errors.errors;\n}\n\nexport function selectCurrencyRate(state) {\n    return state.currencyRate.rate;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: \"0.5em\"\n    },\n});\n\nexport default function ButtonGroup({ children, ...rest }) {\n    const classes = useStyles();\n    return <Button className={classes.root} variant=\"contained\" {...rest}>\n        {children}\n    </Button>;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from \"../generic/Button\";\nimport { Link } from \"react-router-dom\";\nimport { CREATE_PRODUCT } from '../../routes/routes';\nimport { Switch } from '@material-ui/core';\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexFlow: \"row nowrap\",\n        justifyContent: \"flex-end\",\n    },\n});\n\nexport default function ControlPanel({ useAud, updateUseAud, disabled }) {\n    const classes = useStyles();\n    return <div className={classes.root}>\n\n\n        <Switch\n            checked={useAud}\n            onChange={() => updateUseAud(!useAud)}\n            value=\"useAud\"\n            color=\"primary\"\n            disabled={disabled}\n        />\n        <Button\n            color=\"primary\"\n            component={Link}\n            to={CREATE_PRODUCT}\n        >Add Product</Button>\n    </div>;\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport ButtonGroup from '../generic/ButtonGroup';\nimport { Link } from \"react-router-dom\";\nimport * as Routes from \"../../routes/routes\";\nimport { selectAllProducts, selectCurrencyRate } from '../../redux/selectors';\nimport { requestDeleteProduct } from \"../../redux/actions\";\nimport Button from \"../generic/Button\";\nimport ControlPanel from './ControlPanel';\nimport { convertCurrency, formatCurrency } from '../../util/convertCurrency';\nconst useStyles = makeStyles({\n    root: {\n\n    },\n\n    currencyColumn: {\n        textAlign: \"right\", \n    }\n});\n\nfunction ProductTable({ products, deleteProduct, currencyRate }) {\n    const classes = useStyles();\n\n    const [useAud, updateUseAud] = useState(false);\n\n    return (\n        <section>\n            <ControlPanel\n                useAud={useAud}\n                updateUseAud={updateUseAud}\n                disabled={!currencyRate}\n            />\n            <Table className={classes.root}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Product ID</TableCell>\n                        <TableCell>Product Name</TableCell>\n                        <TableCell>{useAud ? `Value (AUD)` : `Value (USD)`}</TableCell>\n                        <TableCell>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {products && products.map((product, i) => {\n                        return (<TableRow\n                            key={product.id}\n                        >\n                            <TableCell>{product.id}</TableCell>\n                            <TableCell>{product.name}</TableCell>\n                            <TableCell className={classes.currencyColumn}>{formatCurrency(\n                                useAud ? convertCurrency(product.priceUsd, currencyRate)\n                                    : product.priceUsd\n                            )}</TableCell>\n                            <TableCell>\n                                <ButtonGroup>\n                                    <Button\n                                        component={Link}\n                                        to={`${Routes.UPDATE_PRODUCT}/${product.id}`}\n                                        color=\"primary\"\n                                    >Update</Button>\n                                    <Button\n                                        onClick={() => deleteProduct(product)}\n                                        color=\"secondary\"\n                                    >Delete</Button>\n                                </ButtonGroup>\n                            </TableCell>\n                        </TableRow>)\n                    })}\n                </TableBody>\n\n\n            </Table>\n        </section>);\n\n}\n\n\n\n\nconst mapStateToProps = (\n    state,\n    ownProps\n) => {\n    return {\n        products: selectAllProducts(state),\n        currencyRate: selectCurrencyRate(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteProduct: (product) => dispatch(requestDeleteProduct(product))\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductTable); ","export function convertCurrency(value, rate) {\n    return value * rate;\n}\n\nexport function formatCurrency(value) {\n    return Number(value).toFixed(2);\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { selectProductByProductId, createEmptyProduct, isUpdateLoading } from '../../redux/selectors';\nimport { requestUpdateProduct } from '../../redux/actions';\nimport { Input, TextField } from '@material-ui/core';\nimport Button from \"../generic/Button\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport { PRODUCT_TABLE } from '../../routes/routes';\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        alignItems: \"stretch\",\n\n        maxWidth: 600,\n    },\n\n    field: {\n        //display: \"block\",\n        paddingBottom: \"1em\",\n    }\n});\n\n/***\n * Not that happy with the way I've done this. \n * \n * Possibly would have been better to use something like Formik. \n */\nfunction ProductEditForm({ productData, submitForm, updateLoading }) {\n    const classes = useStyles();\n    const [name, updateName] = useState(productData.name);\n    const [priceUsd, updatePriceUsd] = useState(productData.priceUsd);\n\n    const [formSubmitted, updateFormSubmitted] = useState(false);\n\n    return (\n        (formSubmitted && !updateLoading) ? <Redirect to={PRODUCT_TABLE} /> : <form\n            className={classes.root}\n            onSubmit={(event) => {\n                event.preventDefault();\n                submitForm({\n                    id: productData.id,\n                    name,\n                    priceUsd,\n                });\n\n                updateFormSubmitted(true);\n            }}\n        >\n            <TextField\n                disabled\n                label=\"Product ID\"\n                value={productData.id || \"n/a\"}\n                className={classes.field}\n            />\n            <TextField\n                value={name}\n                label=\"Product Name\"\n                onChange={(event) => updateName(event.target.value)}\n                disabled={updateLoading}\n                className={classes.field}\n\n            />\n\n            <TextField\n                value={priceUsd}\n                label=\"Price (USD)\"\n                onChange={(event) => updatePriceUsd(event.target.value)}\n                disabled={updateLoading}\n                type=\"number\"\n                className={classes.field}\n\n            />\n\n            <Button\n                type=\"submit\"\n                disabled={updateLoading}\n                className={classes.field}\n                color=\"primary\"\n\n            >Submit</Button>\n        </form >\n    )\n\n}\n\n\n\nconst mapStateToProps = (\n    state,\n    ownProps\n) => {\n    return {\n        updateLoading: isUpdateLoading(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitForm: (productData) => dispatch(requestUpdateProduct(productData))\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductEditForm);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nconst useStyles = makeStyles({\n    root: {\n        padding: \"2em\",\n    },\n});\n\nexport default function ProductEditFormLayout({ children }) {\n    const classes = useStyles();\n    return <div className={classes.root}>\n\n        {children}\n\n    </div>;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport ProductEditForm from './ProductEditForm';\nimport { connect } from 'react-redux';\nimport { selectProductByProductId } from '../../redux/selectors';\nimport { requestUpdateProduct } from '../../redux/actions';\nimport ProductEditFormLayout from '../layouts/ProductEditFormLayout';\n\nconst useStyles = makeStyles({\n    root: {\n\n    },\n});\n\nfunction UpdateProduct({ productData }) {\n    const classes = useStyles();\n    return <ProductEditFormLayout >\n        <Typography variant=\"h2\" gutterBottom>Update Product </Typography>\n        {productData && <ProductEditForm productData={productData} />}\n    </ProductEditFormLayout >;\n}\n\nconst mapStateToProps = (\n    state,\n    ownProps\n) => {\n    return {\n        productData: selectProductByProductId(state, ownProps.match.params.id)\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitForm: (productData) => dispatch(requestUpdateProduct(productData))\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UpdateProduct);","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nimport ProductEditForm from './ProductEditForm';\nimport { createEmptyProduct } from '../../redux/selectors';\nimport ProductEditFormLayout from '../layouts/ProductEditFormLayout';\n\nconst useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        alignItems: \"stretch\",\n    },\n});\n\nconst emptyData = createEmptyProduct();\n\nexport default function CreateProduct({ }) {\n    const classes = useStyles();\n    return <ProductEditFormLayout>\n        <Typography variant=\"h2\" gutterBottom>Create Product </Typography>\n        <ProductEditForm productData={emptyData} />\n    </ProductEditFormLayout>;\n}","import React from \"react\";\nimport { BrowserRouter as ReactRouter, Route, Switch, Link } from \"react-router-dom\";\nimport ProductTable from \"./ProductTable/ProductTable\";\n\nimport * as Routes from \"../routes/routes\";\nimport UpdateProduct from \"./ProductEditForm/UpdateProduct\";\nimport CreateProduct from \"./ProductEditForm/CreateProduct\";\nimport { connect } from 'react-redux';\n\nfunction Router() {\n    return (<ReactRouter>\n        <Switch>\n            {/* nb. Order is important because switch statement */}\n            <Route path={Routes.CREATE_PRODUCT} exact component={CreateProduct} />\n            <Route path={`${Routes.UPDATE_PRODUCT}/:id`} exact component={UpdateProduct} />\n            <Route path={Routes.PRODUCT_TABLE} exact component={ProductTable} />\n            <Route path={Routes.HOME} exact component={ProductTable} />\n        </Switch>\n    </ReactRouter>)\n}\n\nconst mapStateToProps = (\n    state,\n    ownProps\n) => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Router)","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles({\n    root: {\n\n    },\n});\n\nexport default function ProductEditFormLayout({ children }) {\n    const classes = useStyles();\n    return <header className={classes.root}>\n        <Typography\n            variant=\"h1\"\n            align=\"center\"\n            gutterBottom\n        >Acme Product Mangement Tool</Typography>\n    </header>;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { selectErrors } from '../../redux/selectors';\nimport { requestClearErrors } from '../../redux/actions';\nimport { Fab, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        root: {\n            padding: \"1em\",\n            margin: \"1em 2em\",\n            color: `${theme.palette.secondary.main}`,\n            fontWeight: \"bold\",\n            border: `solid 3px ${theme.palette.secondary.main}`,\n            borderRadius: 5\n        },\n\n        button: {\n            display: \"block\",\n            margin: \"0 0 0 auto\",\n        }\n    }\n},\n\n);\n\nfunction ErrorPanel({ errors, clearErrors }) {\n    const classes = useStyles();\n\n    return (errors && <div className={classes.root}>\n        <Typography variant=\"p\">    Uh oh, something went wrong. </Typography>\n        <Fab\n            color=\"secondary\"\n            size=\"small\"\n            className={classes.button}\n            onClick={clearErrors}\n        >\n            <CloseIcon />\n        </Fab>\n    </div>);\n}\n\n\n\nconst mapStateToProps = (\n    state,\n    ownProps\n) => {\n    return {\n        errors: selectErrors(state),\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearErrors: () => dispatch(requestClearErrors())\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ErrorPanel);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { requestFetchAllProducts, requestFetchCurrencyRate } from '../redux/actions';\nimport Router from './Router';\nimport Header from \"./layouts/Header\";\nimport ErrorPanel from './ErrorPanel/ErrorPanel';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    props.fetchAllProducts();\n    props.fetchCurrencyRate();\n  }\n\n  render() {\n    return (\n      <CssBaseline>\n        <Header />\n        <ErrorPanel />\n        <Router />\n      </CssBaseline>\n    );\n  }\n}\n\n\n\n\nconst mapStateToProps = (\n  state,\n  ownProps\n) => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAllProducts: () => dispatch(requestFetchAllProducts()),\n    fetchCurrencyRate: () => dispatch(requestFetchCurrencyRate()),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { FETCH_ALL_PRODUCTS_SUCCESS, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_FAILURE, UPDATE_PRODUCT_SUCCESS, DELETE_PRODUCT_SUCCESS, CLEAR_ERRORS_REQUEST, CLEAR_ERRORS_SUCCESS, FETCH_CURRENCY_RATE_SUCCESS } from \"./actions\";\n\n\nconst initialState = {};\nexport function productsReducer(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case FETCH_ALL_PRODUCTS_SUCCESS: {\n            //Index products by product id. \n            return payload.reduce((acc, cur) => {\n                return { ...acc, [cur.id]: cur };\n            }, {});\n        }\n\n        case UPDATE_PRODUCT_SUCCESS: {\n            //Add/replace product to existing product index\n            return { ...state, [payload.id]: payload }\n        }\n\n        case DELETE_PRODUCT_SUCCESS: {\n            const newState = { ...state };\n            delete newState[payload.id];\n            return newState;\n        }\n\n\n        default: return state;\n    }\n}\n\nconst initialLoadingState = {\n    updateProduct: false,\n}\n/**\n * This is obviously not a sustainable way to handle loading flags, but works for a quick demo. \n * \n * Better solution is a modified version of this: \n * https://medium.com/stashaway-engineering/react-redux-tips-better-way-to-handle-loading-flags-in-your-reducers-afda42a804c6\n */\nexport function loadingFlagsReducer(state = initialLoadingState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case UPDATE_PRODUCT_REQUEST: return { ...state, updateProduct: true }\n        case UPDATE_PRODUCT_SUCCESS: return { ...state, updateProduct: false }\n        case UPDATE_PRODUCT_FAILURE: return { ...state, updateProduct: false }\n        default: return state;\n\n    }\n}\n\nconst initialErrorState = {\n    errors: null,\n}\n\nexport function errorsReducer(state = initialErrorState, action) {\n    const { type, payload } = action;\n\n    if (type.split('_').pop() === 'FAILURE') {\n        return {\n            errors: payload\n        }\n    }\n\n    if (type === CLEAR_ERRORS_SUCCESS) {\n        return initialErrorState;\n    }\n\n    return state;\n}\n\nconst initialCurrencyRateState = {\n    rate: null,\n}\n\nexport function currencyRateReducer(state = initialCurrencyRateState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case FETCH_CURRENCY_RATE_SUCCESS: return {\n            rate: payload\n        }\n\n        default: return state;\n    }\n}\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    loadingFlags: loadingFlagsReducer,\n    errors: errorsReducer,\n    currencyRate: currencyRateReducer,\n});\n\n\nexport default rootReducer; ","import axios from \"axios\";\n\nconst BASE_URL = '/api';\nconst URI_PRODUCTS = '/products';\n\nconst defaultOptions = {\n\n}\n\nexport const makeApiCall = async function (uri, method = \"GET\", options = defaultOptions) {\n    try {\n        const response = await axios({\n            ...options,\n            method: method,\n            url: BASE_URL + uri,\n        });\n        return response.data;\n    } catch (err) {\n        //We will handle this in the middleware\n        throw err;\n    }\n}\nexport async function fetchAllProducts() {\n    return makeApiCall(URI_PRODUCTS);\n}\n\nexport async function postProduct(product) {\n    return makeApiCall(URI_PRODUCTS, \"POST\", {\n        data: product\n    });\n}\n\nexport async function patchProduct(product) {\n    return makeApiCall(`${URI_PRODUCTS}/${product.id}`, \"PATCH\", {\n        data: product\n    });\n}\n\nexport async function deleteProduct(product) {\n    return makeApiCall(`${URI_PRODUCTS}/${product.id}`, \"DELETE\");\n}","import axios from \"axios\";\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nexport async function fetchLatestRate(from, to) {\n    //https://api.exchangeratesapi.io/latest?symbols=USD&base=AUD\n\n    try {\n        const response = await axios(({\n            method: \"GET\",\n            url: `${BASE_URL}?symbols=${to}&base=${from}`\n        }));\n        return response.data;\n    }\n    catch (err) {\n        return err;\n    }\n\n\n}\n\nexport async function fetchUsdToAudRate() {\n    const ratesData = await fetchLatestRate(\"USD\", \"AUD\");\n    return ratesData.rates.AUD;\n}\n\n","import { all, takeLeading, put, call } from \"redux-saga/effects\";\nimport {\n    FETCH_ALL_PRODUCTS_REQUEST,\n    FETCH_ALL_PRODUCTS_SUCCESS,\n    FETCH_ALL_PRODUCTS_FAILURE,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAILURE,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_FAILURE,\n    DELETE_PRODUCT_SUCCESS,\n    CLEAR_ERRORS_REQUEST,\n    CLEAR_ERRORS_FAILURE,\n    CLEAR_ERRORS_SUCCESS,\n    FETCH_CURRENCY_RATE_REQUEST,\n    FETCH_CURRENCY_RATE_SUCCESS,\n    FETCH_CURRENCY_RATE_FAILURE\n} from \"./actions\";\nimport { fetchAllProducts, patchProduct, postProduct, deleteProduct } from \"../services/ProductService\";\nimport { fetchUsdToAudRate } from \"../services/CurrencyConversionService\";\nexport function* fetchAllProductsSaga() {\n    yield takeLeading(FETCH_ALL_PRODUCTS_REQUEST, function* () {\n        try {\n            const result = yield call(fetchAllProducts);\n            console.log(result);\n            yield put({\n                type: FETCH_ALL_PRODUCTS_SUCCESS,\n                payload: result\n            })\n        }\n        catch (err) {\n\n            console.error(err);\n            yield put({\n                type: FETCH_ALL_PRODUCTS_FAILURE,\n                payload: err\n            });\n        }\n    });\n}\n\nexport function isNewProduct(product) {\n    return product.id === undefined || product.id.length === 0\n}\n\nexport function* updateProductSaga() {\n    yield takeLeading(UPDATE_PRODUCT_REQUEST, function* (action) {\n        try {\n            const { payload } = action;\n            let result;\n\n            if (isNewProduct(payload)) {\n                result = yield call(postProduct, payload);\n            }\n            else {\n                result = yield call(patchProduct, payload);\n            }\n\n            yield put({\n                type: UPDATE_PRODUCT_SUCCESS,\n                payload: result\n            })\n        }\n        catch (err) {\n\n            console.error(err);\n            yield put({\n                type: UPDATE_PRODUCT_FAILURE,\n                payload: err\n            });\n        }\n    });\n}\n\nexport function* deleteProductSaga() {\n    yield takeLeading(DELETE_PRODUCT_REQUEST, function* (action) {\n        try {\n            const { payload } = action;\n            const result = yield call(deleteProduct, payload);\n\n            yield put({\n                type: DELETE_PRODUCT_SUCCESS,\n                payload: result\n            })\n        }\n        catch (err) {\n\n            console.error(err);\n            yield put({\n                type: DELETE_PRODUCT_FAILURE,\n                payload: err\n            });\n        }\n    });\n}\n\nexport function* clearErrorsSaga() {\n    yield takeLeading(CLEAR_ERRORS_REQUEST, function* () {\n        try {\n            yield put({\n                type: CLEAR_ERRORS_SUCCESS,\n            })\n        }\n        catch (err) {\n            yield put({\n                type: CLEAR_ERRORS_FAILURE,\n                payload: err\n            });\n        }\n    });\n}\n\nexport function* fetchCurrencyRateSaga() {\n    yield takeLeading(FETCH_CURRENCY_RATE_REQUEST, function* () {\n        try {\n\n            const rate = yield call(fetchUsdToAudRate);\n            yield put({\n                type: FETCH_CURRENCY_RATE_SUCCESS,\n                payload: rate,\n            })\n        }\n        catch (err) {\n            yield put({\n                type: FETCH_CURRENCY_RATE_FAILURE,\n                payload: err\n            });\n        }\n    });\n}\n\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        fetchAllProductsSaga(),\n        updateProductSaga(),\n        deleteProductSaga(),\n        clearErrorsSaga(),\n        fetchCurrencyRateSaga(),\n    ])\n}","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({  //Import from ./theme\n\n\n    typography: {\n        h1: {\n            fontSize: \"3rem\",\n        },\n        h2: {\n            fontSize: \"2rem\",\n        }\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/store';\nimport { Provider } from 'react-redux';\nimport { makeStyles, ThemeProvider } from \"@material-ui/styles\";\nimport { theme } from \"./theme/theme\";\nconst store = configureStore();\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux'\n\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from '../redux/reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootSagas from \"../redux/sagas\";\n\nexport default function configureStore(preloadedState) {\n\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware]\n    const middlewareEnhancer = applyMiddleware(...middlewares)\n\n    const enhancers = [middlewareEnhancer]\n    const composedEnhancers = composeWithDevTools(...enhancers)\n\n    const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n    sagaMiddleware.run(rootSagas)\n\n    return store\n}"],"sourceRoot":""}